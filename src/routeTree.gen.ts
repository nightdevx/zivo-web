/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard/settings/index'
import { Route as DashboardServicesIndexImport } from './routes/dashboard/services/index'
import { Route as DashboardProfileIndexImport } from './routes/dashboard/profile/index'
import { Route as DashboardMessagesIndexImport } from './routes/dashboard/messages/index'
import { Route as DashboardHoursIndexImport } from './routes/dashboard/hours/index'
import { Route as DashboardGalleryIndexImport } from './routes/dashboard/gallery/index'
import { Route as DashboardEmployeesIndexImport } from './routes/dashboard/employees/index'
import { Route as DashboardCampaignsIndexImport } from './routes/dashboard/campaigns/index'
import { Route as DashboardAppointmentsIndexImport } from './routes/dashboard/appointments/index'
import { Route as authRegisterIndexImport } from './routes/(auth)/register/index'
import { Route as authLoginIndexImport } from './routes/(auth)/login/index'
import { Route as authForgotPasswordIndexImport } from './routes/(auth)/forgot-password/index'
import { Route as DashboardAppointmentsAppointmentIdImport } from './routes/dashboard/appointments/$appointmentId'
import { Route as DashboardServicesNewIndexImport } from './routes/dashboard/services/new/index'
import { Route as DashboardCampaignsNewIndexImport } from './routes/dashboard/campaigns/new/index'
import { Route as DashboardAppointmentsNewIndexImport } from './routes/dashboard/appointments/new/index'
import { Route as DashboardAppointmentsEditAppointmentIdImport } from './routes/dashboard/appointments/edit/$appointmentId'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardServicesIndexRoute = DashboardServicesIndexImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProfileIndexRoute = DashboardProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardMessagesIndexRoute = DashboardMessagesIndexImport.update({
  id: '/messages/',
  path: '/messages/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardHoursIndexRoute = DashboardHoursIndexImport.update({
  id: '/hours/',
  path: '/hours/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardGalleryIndexRoute = DashboardGalleryIndexImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardEmployeesIndexRoute = DashboardEmployeesIndexImport.update({
  id: '/employees/',
  path: '/employees/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCampaignsIndexRoute = DashboardCampaignsIndexImport.update({
  id: '/campaigns/',
  path: '/campaigns/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAppointmentsIndexRoute = DashboardAppointmentsIndexImport.update(
  {
    id: '/appointments/',
    path: '/appointments/',
    getParentRoute: () => DashboardRouteRoute,
  } as any,
)

const authRegisterIndexRoute = authRegisterIndexImport.update({
  id: '/(auth)/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const authLoginIndexRoute = authLoginIndexImport.update({
  id: '/(auth)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordIndexRoute = authForgotPasswordIndexImport.update({
  id: '/(auth)/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAppointmentsAppointmentIdRoute =
  DashboardAppointmentsAppointmentIdImport.update({
    id: '/appointments/$appointmentId',
    path: '/appointments/$appointmentId',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardServicesNewIndexRoute = DashboardServicesNewIndexImport.update({
  id: '/services/new/',
  path: '/services/new/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCampaignsNewIndexRoute = DashboardCampaignsNewIndexImport.update(
  {
    id: '/campaigns/new/',
    path: '/campaigns/new/',
    getParentRoute: () => DashboardRouteRoute,
  } as any,
)

const DashboardAppointmentsNewIndexRoute =
  DashboardAppointmentsNewIndexImport.update({
    id: '/appointments/new/',
    path: '/appointments/new/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardAppointmentsEditAppointmentIdRoute =
  DashboardAppointmentsEditAppointmentIdImport.update({
    id: '/appointments/edit/$appointmentId',
    path: '/appointments/edit/$appointmentId',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/appointments/$appointmentId': {
      id: '/dashboard/appointments/$appointmentId'
      path: '/appointments/$appointmentId'
      fullPath: '/dashboard/appointments/$appointmentId'
      preLoaderRoute: typeof DashboardAppointmentsAppointmentIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/(auth)/forgot-password/': {
      id: '/(auth)/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register/': {
      id: '/(auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/appointments/': {
      id: '/dashboard/appointments/'
      path: '/appointments'
      fullPath: '/dashboard/appointments'
      preLoaderRoute: typeof DashboardAppointmentsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/campaigns/': {
      id: '/dashboard/campaigns/'
      path: '/campaigns'
      fullPath: '/dashboard/campaigns'
      preLoaderRoute: typeof DashboardCampaignsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/employees/': {
      id: '/dashboard/employees/'
      path: '/employees'
      fullPath: '/dashboard/employees'
      preLoaderRoute: typeof DashboardEmployeesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/gallery/': {
      id: '/dashboard/gallery/'
      path: '/gallery'
      fullPath: '/dashboard/gallery'
      preLoaderRoute: typeof DashboardGalleryIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/hours/': {
      id: '/dashboard/hours/'
      path: '/hours'
      fullPath: '/dashboard/hours'
      preLoaderRoute: typeof DashboardHoursIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/messages/': {
      id: '/dashboard/messages/'
      path: '/messages'
      fullPath: '/dashboard/messages'
      preLoaderRoute: typeof DashboardMessagesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/profile/': {
      id: '/dashboard/profile/'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/services/': {
      id: '/dashboard/services/'
      path: '/services'
      fullPath: '/dashboard/services'
      preLoaderRoute: typeof DashboardServicesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/appointments/edit/$appointmentId': {
      id: '/dashboard/appointments/edit/$appointmentId'
      path: '/appointments/edit/$appointmentId'
      fullPath: '/dashboard/appointments/edit/$appointmentId'
      preLoaderRoute: typeof DashboardAppointmentsEditAppointmentIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/appointments/new/': {
      id: '/dashboard/appointments/new/'
      path: '/appointments/new'
      fullPath: '/dashboard/appointments/new'
      preLoaderRoute: typeof DashboardAppointmentsNewIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/campaigns/new/': {
      id: '/dashboard/campaigns/new/'
      path: '/campaigns/new'
      fullPath: '/dashboard/campaigns/new'
      preLoaderRoute: typeof DashboardCampaignsNewIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/services/new/': {
      id: '/dashboard/services/new/'
      path: '/services/new'
      fullPath: '/dashboard/services/new'
      preLoaderRoute: typeof DashboardServicesNewIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAppointmentsAppointmentIdRoute: typeof DashboardAppointmentsAppointmentIdRoute
  DashboardAppointmentsIndexRoute: typeof DashboardAppointmentsIndexRoute
  DashboardCampaignsIndexRoute: typeof DashboardCampaignsIndexRoute
  DashboardEmployeesIndexRoute: typeof DashboardEmployeesIndexRoute
  DashboardGalleryIndexRoute: typeof DashboardGalleryIndexRoute
  DashboardHoursIndexRoute: typeof DashboardHoursIndexRoute
  DashboardMessagesIndexRoute: typeof DashboardMessagesIndexRoute
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute
  DashboardServicesIndexRoute: typeof DashboardServicesIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
  DashboardAppointmentsEditAppointmentIdRoute: typeof DashboardAppointmentsEditAppointmentIdRoute
  DashboardAppointmentsNewIndexRoute: typeof DashboardAppointmentsNewIndexRoute
  DashboardCampaignsNewIndexRoute: typeof DashboardCampaignsNewIndexRoute
  DashboardServicesNewIndexRoute: typeof DashboardServicesNewIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAppointmentsAppointmentIdRoute:
    DashboardAppointmentsAppointmentIdRoute,
  DashboardAppointmentsIndexRoute: DashboardAppointmentsIndexRoute,
  DashboardCampaignsIndexRoute: DashboardCampaignsIndexRoute,
  DashboardEmployeesIndexRoute: DashboardEmployeesIndexRoute,
  DashboardGalleryIndexRoute: DashboardGalleryIndexRoute,
  DashboardHoursIndexRoute: DashboardHoursIndexRoute,
  DashboardMessagesIndexRoute: DashboardMessagesIndexRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
  DashboardServicesIndexRoute: DashboardServicesIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  DashboardAppointmentsEditAppointmentIdRoute:
    DashboardAppointmentsEditAppointmentIdRoute,
  DashboardAppointmentsNewIndexRoute: DashboardAppointmentsNewIndexRoute,
  DashboardCampaignsNewIndexRoute: DashboardCampaignsNewIndexRoute,
  DashboardServicesNewIndexRoute: DashboardServicesNewIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/appointments/$appointmentId': typeof DashboardAppointmentsAppointmentIdRoute
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/dashboard/appointments': typeof DashboardAppointmentsIndexRoute
  '/dashboard/campaigns': typeof DashboardCampaignsIndexRoute
  '/dashboard/employees': typeof DashboardEmployeesIndexRoute
  '/dashboard/gallery': typeof DashboardGalleryIndexRoute
  '/dashboard/hours': typeof DashboardHoursIndexRoute
  '/dashboard/messages': typeof DashboardMessagesIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/services': typeof DashboardServicesIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/appointments/edit/$appointmentId': typeof DashboardAppointmentsEditAppointmentIdRoute
  '/dashboard/appointments/new': typeof DashboardAppointmentsNewIndexRoute
  '/dashboard/campaigns/new': typeof DashboardCampaignsNewIndexRoute
  '/dashboard/services/new': typeof DashboardServicesNewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/appointments/$appointmentId': typeof DashboardAppointmentsAppointmentIdRoute
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/dashboard/appointments': typeof DashboardAppointmentsIndexRoute
  '/dashboard/campaigns': typeof DashboardCampaignsIndexRoute
  '/dashboard/employees': typeof DashboardEmployeesIndexRoute
  '/dashboard/gallery': typeof DashboardGalleryIndexRoute
  '/dashboard/hours': typeof DashboardHoursIndexRoute
  '/dashboard/messages': typeof DashboardMessagesIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/services': typeof DashboardServicesIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/appointments/edit/$appointmentId': typeof DashboardAppointmentsEditAppointmentIdRoute
  '/dashboard/appointments/new': typeof DashboardAppointmentsNewIndexRoute
  '/dashboard/campaigns/new': typeof DashboardCampaignsNewIndexRoute
  '/dashboard/services/new': typeof DashboardServicesNewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/appointments/$appointmentId': typeof DashboardAppointmentsAppointmentIdRoute
  '/(auth)/forgot-password/': typeof authForgotPasswordIndexRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/(auth)/register/': typeof authRegisterIndexRoute
  '/dashboard/appointments/': typeof DashboardAppointmentsIndexRoute
  '/dashboard/campaigns/': typeof DashboardCampaignsIndexRoute
  '/dashboard/employees/': typeof DashboardEmployeesIndexRoute
  '/dashboard/gallery/': typeof DashboardGalleryIndexRoute
  '/dashboard/hours/': typeof DashboardHoursIndexRoute
  '/dashboard/messages/': typeof DashboardMessagesIndexRoute
  '/dashboard/profile/': typeof DashboardProfileIndexRoute
  '/dashboard/services/': typeof DashboardServicesIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/appointments/edit/$appointmentId': typeof DashboardAppointmentsEditAppointmentIdRoute
  '/dashboard/appointments/new/': typeof DashboardAppointmentsNewIndexRoute
  '/dashboard/campaigns/new/': typeof DashboardCampaignsNewIndexRoute
  '/dashboard/services/new/': typeof DashboardServicesNewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/appointments/$appointmentId'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/appointments'
    | '/dashboard/campaigns'
    | '/dashboard/employees'
    | '/dashboard/gallery'
    | '/dashboard/hours'
    | '/dashboard/messages'
    | '/dashboard/profile'
    | '/dashboard/services'
    | '/dashboard/settings'
    | '/dashboard/appointments/edit/$appointmentId'
    | '/dashboard/appointments/new'
    | '/dashboard/campaigns/new'
    | '/dashboard/services/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/dashboard/appointments/$appointmentId'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/appointments'
    | '/dashboard/campaigns'
    | '/dashboard/employees'
    | '/dashboard/gallery'
    | '/dashboard/hours'
    | '/dashboard/messages'
    | '/dashboard/profile'
    | '/dashboard/services'
    | '/dashboard/settings'
    | '/dashboard/appointments/edit/$appointmentId'
    | '/dashboard/appointments/new'
    | '/dashboard/campaigns/new'
    | '/dashboard/services/new'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/appointments/$appointmentId'
    | '/(auth)/forgot-password/'
    | '/(auth)/login/'
    | '/(auth)/register/'
    | '/dashboard/appointments/'
    | '/dashboard/campaigns/'
    | '/dashboard/employees/'
    | '/dashboard/gallery/'
    | '/dashboard/hours/'
    | '/dashboard/messages/'
    | '/dashboard/profile/'
    | '/dashboard/services/'
    | '/dashboard/settings/'
    | '/dashboard/appointments/edit/$appointmentId'
    | '/dashboard/appointments/new/'
    | '/dashboard/campaigns/new/'
    | '/dashboard/services/new/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  authForgotPasswordIndexRoute: typeof authForgotPasswordIndexRoute
  authLoginIndexRoute: typeof authLoginIndexRoute
  authRegisterIndexRoute: typeof authRegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  authForgotPasswordIndexRoute: authForgotPasswordIndexRoute,
  authLoginIndexRoute: authLoginIndexRoute,
  authRegisterIndexRoute: authRegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/(auth)/forgot-password/",
        "/(auth)/login/",
        "/(auth)/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/appointments/$appointmentId",
        "/dashboard/appointments/",
        "/dashboard/campaigns/",
        "/dashboard/employees/",
        "/dashboard/gallery/",
        "/dashboard/hours/",
        "/dashboard/messages/",
        "/dashboard/profile/",
        "/dashboard/services/",
        "/dashboard/settings/",
        "/dashboard/appointments/edit/$appointmentId",
        "/dashboard/appointments/new/",
        "/dashboard/campaigns/new/",
        "/dashboard/services/new/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/appointments/$appointmentId": {
      "filePath": "dashboard/appointments/$appointmentId.tsx",
      "parent": "/dashboard"
    },
    "/(auth)/forgot-password/": {
      "filePath": "(auth)/forgot-password/index.tsx"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login/index.tsx"
    },
    "/(auth)/register/": {
      "filePath": "(auth)/register/index.tsx"
    },
    "/dashboard/appointments/": {
      "filePath": "dashboard/appointments/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/campaigns/": {
      "filePath": "dashboard/campaigns/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/employees/": {
      "filePath": "dashboard/employees/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/gallery/": {
      "filePath": "dashboard/gallery/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/hours/": {
      "filePath": "dashboard/hours/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/messages/": {
      "filePath": "dashboard/messages/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/profile/": {
      "filePath": "dashboard/profile/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/services/": {
      "filePath": "dashboard/services/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/appointments/edit/$appointmentId": {
      "filePath": "dashboard/appointments/edit/$appointmentId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/appointments/new/": {
      "filePath": "dashboard/appointments/new/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/campaigns/new/": {
      "filePath": "dashboard/campaigns/new/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/services/new/": {
      "filePath": "dashboard/services/new/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
